{"version":3,"sources":["assets/icons/speaker.svg","assets/icons/off.svg","assets/icons/on.svg","cmps/Jumbotron.jsx","services/httpService.js","services/videoService.js","store/actions/videoActions.js","assets/icons/thumbsUp.svg","assets/icons/thumbsDown.svg","assets/icons/downArrow.svg","cmps/Controls.jsx","cmps/MoviePreviewControls.jsx","assets/icons/modalArrow.svg","services/storageService.js","services/userService.js","store/actions/userActions.js","cmps/Avatar.jsx","assets/icons/logo.svg","cmps/Navbar.jsx","assets/icons/exit.svg","cmps/MoviePreview.jsx","cmps/MovieDetails.jsx","cmps/MovieList.jsx","cmps/Footer.jsx","pages/NetflixApp.jsx","pages/AboutPage.jsx","pages/LoginPage.jsx","pages/WelcomePage.jsx","assets/icons/hamburger.svg","cmps/NavbarMobile.jsx","assets/icons/rightArrow.svg","cmps/Drawer.jsx","App.jsx","store/reducers/videoReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["Jumbotron","useState","logoClass","setLogoClass","isMuted","setIsMuted","isJumboTronCanPlay","useSelector","state","videoReducer","dispatch","useDispatch","mainVideoEl","useRef","useEffect","window","addEventListener","scrollToStopJumbotron","addClassTimeout","setTimeout","clearTimeout","removeEventListener","current","pause","pageYOffset","type","className","onClick","paused","play","ev","stopPropagation","muted","toggleMute","src","speaker","alt","off","on","autoPlay","ref","BASE_URL","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","location","assign","search","categoryList","id","name","httpService","movies","movieToReturn","videoService","query","getMovieById","getMoviePreviews","resetMovie","Controls","thumbsUp","thumbsDown","downArrow","MoviePreviewControls","props","genre","map","currGenre","idx","length","userService","login","signup","logOut","googleSignup","userCredentials","user","sessionStorage","setItem","JSON","stringify","_handleLogin","localStorage","clear","token","onUserSignup","newUser","loggedInUser","onUserLogout","onUserLogin","onGoogleSignup","Avatar","isModalShown","setIsModalShown","userReducer","history","useHistory","div","onHoverStart","onHoverEnd","imgUrl","animate","exit","initial","variants","opacity","transition","duration","modalArrow","fullName","replace","err","Navbar","navbarClass","setNavbarClass","getNavbarBg","to","logo","currTimeOut","mapDispatchToProps","loadMovie","currentMovie","MovieDetails","connect","useParams","videoEl","loadMovieDetails","easing","scale","ease","Fragment","push","video","trailerURL","h2","style","fontSize","marginBottom","p","MoviePreview","currentTrailer","setCurrentTrailer","imgClass","setImgClass","trailerRef","startTrailer","onHoverPreviewEnd","onMovieClick","backgroundColor","originX","originY","top","left","controlsVariants","animateControls","borderRadius","initialControls","exitControls","img","imgURL","exitBeforeEnter","MovieList","listClassNames","setListClassNames","loadMovies","spaceBetween","slidesPerView","slidesPerGroup","speed","navigation","loop","breakpoints","1400","1096","800","500","1","onSwiper","swiper","slideToLoop","movie","_id","SwiperCore","use","Navigation","Pagination","Footer","target","href","width","marginRight","NetflixApp","categories","currCategories","loadCategories","y","delay","section","category","path","component","AboutPage","h4","LoginPage","isErrorShown","setIsErrorShown","toggleMode","setToggleMode","firstName","lastName","email","password","userDetails","setUserDetails","handleChange","currValue","value","prevDetails","onSignup","preventDefault","trim","onLogin","userToLogin","onSuccess","validate","values","errors","test","onSubmit","isSubmitting","onChange","placeholder","autoComplete","disabled","clientId","buttonText","onFailure","cookiePolicy","isSignedIn","WelcomePage","minWidth","lineHeight","padding","zIndex","NavbarMobile","isDrawerShown","hamburger","toggleDrawer","Drawer","setIsDrawerShown","transform","visibility","rightArrow","activeClassName","exact","App","useLocation","pathname","initialState","USER","parse","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef71f4a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/speaker.36124fcd.svg\";","export default __webpack_public_path__ + \"static/media/off.5893ca55.svg\";","export default __webpack_public_path__ + \"static/media/on.f00978e4.svg\";","import React from 'react'\nimport { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport speaker from '../assets/icons/speaker.svg'\nimport off from '../assets/icons/off.svg'\nimport on from '../assets/icons/on.svg'\n\nexport function Jumbotron() {\n\n    const [logoClass, setLogoClass] = useState('jumbotron-logo')\n    const [isMuted, setIsMuted] = useState(true)\n    const isJumboTronCanPlay = useSelector(state => state.videoReducer.isJumboTronCanPlay)\n    const dispatch = useDispatch()\n    const mainVideoEl = useRef(null)\n\n    useEffect(() => {\n        window.addEventListener('scroll', scrollToStopJumbotron)\n        const addClassTimeout = setTimeout(() => {\n            setLogoClass( 'jumbotron-logo resized-logo' )\n        }, 4000)\n        return () => {\n            clearTimeout(addClassTimeout)\n            window.removeEventListener('scroll', scrollToStopJumbotron)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!isJumboTronCanPlay) mainVideoEl.current.pause()\n    }, [isJumboTronCanPlay])\n\n    const scrollToStopJumbotron = () => {\n        if (window.pageYOffset > 400) {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n            mainVideoEl.current.pause()\n        }\n    }\n\n    const toggleJumbotronVideo = () => {\n        if (mainVideoEl.current.paused) {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: true })\n            mainVideoEl.current.play()\n        }\n        else {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n            mainVideoEl.current.pause()}\n    }\n\n    const toggleMute = (ev) => {\n        ev.stopPropagation()\n        setIsMuted(!isMuted)\n        mainVideoEl.current.muted = !mainVideoEl.current.muted\n    }\n    \n    return (\n        <section className=\"jumbotron-container\" onClick={() => toggleJumbotronVideo()}>\n            <div className=\"mute-btn-container\" onClick={ (ev) => toggleMute(ev) }>\n                <img src={speaker} alt=\"toggle-mute\"/>\n                <img src={isMuted ? off : on} alt=\"\"/>\n            </div>\n            <div className=\"video-container\">\n                <div className={logoClass} >\n                    <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1604490766/AAAABcxoPeN-DpwsPN_8-2FgylY9Qcke_I3SPAc8AtGzb-XiQxoWFGRocQ_LsTY7210f-xKKMr0DKMurSA5L84AHRrY2PSEEKDIm92fglsbdsFLd5INW09Mu0vCr05WOoDPDkchhwzDvUnBlPLzGFrGo31x-50dgKRWWdP8zZfl3KO4BEGgJRpd6nGbG7d3d0iA6UQRr0IUwWXA_xq6uso.png\" alt=\"\"/>\n                </div>\n                <video autoPlay muted ref={mainVideoEl} > \n                    <source src=\"https://res.cloudinary.com/da0i9wy5t/video/upload/v1603972997/David_Attenborough__A_Life_on_Our_Planet___Official_Trailer___Netflix_gw0wrf.mp4\" type=\"video/mp4\" />\n                </video>\n                <div className=\"jumbotron-grey-gradient\"></div>\n                <div className=\"jumbotron-grey-bg\"></div>\n            </div>\n        </section>\n    )\n}","import Axios from 'axios';\n\n// for db.json\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\n    '/api/' :\n    '//localhost:3030/api/'\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\nexport default {\n    get(endpoint, data) {\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'get', data) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n            window.location.assign('/#/login');\n        }\n        throw err;\n    }\n}","// import axios from \"axios\"\nimport httpService from \"./httpService\";\n\nasync function query(search) {\n    return categoryList\n}\n\nconst categoryList=[\n    {\n        id: 'c101',\n        name: 'New Releases'\n    },\n    {\n        id: 'c102',\n        name: 'Action'\n    },\n    {\n        id: 'c103',\n        name: 'Drama'\n    },\n]\n\nasync function getMoviePreviews() {\n    const movies = await httpService.get('movie')\n    return movies\n}\n\nasync function getMovieById(id){\n    const movieToReturn = await httpService.get(`movie/${id}`)\n    return movieToReturn\n}\n\nexport const videoService = {\n    query,\n    categoryList,\n    getMovieById,\n    getMoviePreviews\n}\n","import { videoService } from '../../services/videoService'\n\nexport function loadCategories() {\n  return async dispatch => {\n    try {\n      const categories = await videoService.query();\n      dispatch({ type: 'SET_CATEGORIES', categories });\n      loadMovies()\n    } catch (err) {\n      console.log('error loading categories', err);\n      throw err\n    }\n  }\n}\n\nexport function loadMovies() {\n  return async dispatch => {\n    try {\n      const movies = await videoService.moviePreviews();\n      dispatch({ type: 'SET_MOVIES', movies });\n    } catch (err) {\n      console.log('error loading movies', err);\n      throw err;\n    }\n  }\n}\n\nexport function loadMovie(id){\n  return async dispatch => {\n    try{\n      const currentMovie = await videoService.getMovieById(id)\n      dispatch({ type: 'SET_MOVIE', currentMovie })\n    } catch (err) {\n      console.log(err)\n      throw err\n    }\n  }\n}\n\nexport function resetMovie(){\n  return async dispatch => {\n    try {\n      dispatch({ type: 'RESET_MOVIE' })\n    } catch(err){\n      console.log(err)\n      throw err\n    }\n  }\n}\n\n// export function disableJumbotronVideo() {\n//   return dispatch => {\n//     dispatch({ type: 'DISABLE_JUMBOTRON_VIDEO' })\n//   }\n// }\n// export function enableJumbotronVideo() {\n//   return dispatch => {\n//     dispatch({ type: 'ENABLE_JUMBOTRON_VIDEO' })\n//   }\n// }","export default __webpack_public_path__ + \"static/media/thumbsUp.46731bd4.svg\";","export default __webpack_public_path__ + \"static/media/thumbsDown.b112ce99.svg\";","export default __webpack_public_path__ + \"static/media/downArrow.720f6c4d.svg\";","import React from 'react'\nimport thumbsDown from '../assets/icons/thumbsUp.svg'\nimport thumbsUp from '../assets/icons/thumbsDown.svg'\nimport downArrow from '../assets/icons/downArrow.svg'\n\n\nexport const Controls = () => {\n\n    return (\n        <div className=\"icons-container\">\n            <div className=\"thumbs-container\">\n                <div className=\"icon-container\"><img src={thumbsUp} alt=\"\" /></div>\n                <div className=\"icon-container\"><img src={thumbsDown} alt=\"\" /></div>\n            </div>\n            <div className=\"more-info-container\"><h4>More info</h4><div className=\"icon-container arrow\"><img src={downArrow} alt=\"\" /> </div></div>\n        </div>\n    )\n}","import React from 'react'\nimport { Controls } from './Controls'\n\nexport const MoviePreviewControls = (props) => {\n\n    const getGenres = () => {\n        const genres = props.genre.map((currGenre, idx) => {\n            if (idx === props.genre.length - 1) {\n                return <p key={idx}>{currGenre}</p>\n            } else return (\n                <p key={idx}>{currGenre}<span className=\"middle-dot\">·</span></p>\n            )\n        })\n        return genres\n    }\n\n    return (\n        <div className=\"controls-container\">\n            <div><h6>{props.name}</h6></div>\n            <div className=\"inner-controls-container\"><Controls /></div>\n            <div className=\"genres-container\">{ getGenres() }</div>\n        </div>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/modalArrow.20d3ba61.svg\";","function loadFromStorage(key) {\n    var val = localStorage.getItem(key)\n    return (val) ? JSON.parse(val) : null;\n}\n\nfunction saveToStorage(key, val) {\n    localStorage[key] = JSON.stringify(val);\n}\n\nexport default {\n    loadFromStorage,\n    saveToStorage\n}","import httpService from \"./httpService\";\nimport storageService from \"./storageService\";\n\n// CRUD\n\nconst userService = {\n    login,\n    signup,\n    logOut,\n    googleSignup\n    // checkForLoggedInUser,\n    // update,\n    // getUserbyId\n}\n\nexport default userService\n\nasync function login(userCredentials){\n    const user = await httpService.post('auth/login', userCredentials)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\nasync function signup(userCredentials){\n    const user = await httpService.post('auth/signup', userCredentials)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\nasync function logOut(){\n    await httpService.post('auth/logout')\n    localStorage.clear()\n    sessionStorage.clear()\n}\n\nasync function googleSignup(token) {\n    const user = await httpService.post('google/signup', token)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\n// async function checkForLoggedInUser() {\n//     console.log('yes');\n    \n//     const user = storageService.loadFromStorage('USER')\n//     if (user) {\n//         // keep user logged in with sending a request to server\n//     }\n// }\n\nfunction _handleLogin(user){\n    localStorage.setItem('USER', JSON.stringify(user))\n    return user\n}","import userService from \"../../services/userService\";\n\nexport function onUserSignup(userCredentials) {\n    return async dispatch => {\n        try {\n            const newUser = await userService.signup(userCredentials)\n            dispatch({ type: 'SET_USER', loggedInUser: newUser })\n        } catch (err) {\n            console.log(err, 'error signing up')\n            throw err\n        }\n    }\n}\n\nexport function onUserLogout(){\n    return async dispatch => {\n        try {\n            await userService.logOut()\n            dispatch({ type: 'SET_USER', loggedInUser: null })\n        } catch (err) {\n            console.log('cannot logout', err)\n            throw err\n        }\n    }\n}\n\nexport function onUserLogin(userCredentials){\n    return async dispatch => {\n        try {\n            const user = await userService.login(userCredentials)\n            dispatch({ type: 'SET_USER', loggedInUser: user })\n        } catch (err){\n            console.log('cannot login', err)\n            throw err\n        }\n    }\n}\n\nexport function onGoogleSignup(token){\n    return async dispatch => {\n        try{\n            // code here to send to service the token \n            // that will send the token to server\n            // server will authenticate the details\n            // await userService.googleSignup(token)\n            const user = await userService.googleSignup(token)\n            dispatch({ type: 'SET_USER', loggedInUser: user })\n        } catch (err) {\n            console.log('error on google signup', err)\n            throw err\n        }\n    }\n}\n\n// export function checkLoggedInUser(){\n//     return async dispatch => {\n//         try {\n//             await userService.checkForLoggedInUser()\n//             // if(user) dispatch({ type: 'SET_USER', loggedInUser: user })\n//         } catch (err) {\n//             console.log('no user in local storage');\n//         }\n//     }\n// }","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport modalArrow from '../assets/icons/modalArrow.svg'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { onUserLogout } from '../store/actions/userActions'\n\nexport const Avatar = (props) => {\n\n    // fix its z index of the modal\n    const [isModalShown, setIsModalShown] = useState(false)\n    const {loggedInUser} = useSelector(state => state.userReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const onLogout = () => {\n        if(loggedInUser){\n            try {\n                dispatch(onUserLogout())\n                history.replace('/login')\n            } catch (err) {\n                // show error message\n                console.log('there was error loging out', err)\n            }\n        }\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            transition: {\n                duration: 0.2,\n            }\n        },\n        exit: {\n            opacity: 0,\n            transition: {\n                duration: 0.2,\n            }\n        },\n        initial: {\n            opacity: 0,\n        }\n    }\n    \n    return (\n        <motion.div className=\"avatar-container\"\n            onHoverStart={ () => setIsModalShown(true) }\n            onHoverEnd={ () => setIsModalShown(false) }\n        >\n            <div>\n                <div className=\"avatar-img-container\">\n                    <img src={props.loggedInUser.imgUrl} alt=\"\" />\n                </div>\n            </div>\n            {isModalShown && \n                <motion.div\n                        animate=\"animate\"\n                        exit=\"exit\"\n                        initial=\"initial\"\n                        variants={variants}\n                        className=\"arrow-container\"\n                    >\n                        <img src={ modalArrow } alt=\"\"/>\n                        <div className=\"avatar-modal\">\n                            <div className=\"avatar-modal-el-container\">\n                                <h4>Hi {loggedInUser.fullName}</h4>\n                                <div className=\"logout-container\">\n                                    <div className=\"line-through\"></div>\n                                    <button onClick={ onLogout }>Log out</button>\n                                </div>\n                            </div>\n                        </div>\n                </motion.div>\n            }\n        </motion.div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.673ba02a.svg\";","import React, { useEffect, useRef } from 'react'\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Avatar } from './Avatar'\nimport logo from '../assets/icons/logo.svg'\n\nexport function Navbar() {\n\n    const [navbarClass, setNavbarClass] = useState('navbar')\n    const { loggedInUser } = useSelector(state => state.userReducer)\n    \n    useEffect(() => {\n        window.addEventListener('scroll', getNavbarBg)\n        return () => {\n            window.removeEventListener('scroll', getNavbarBg)\n        }\n    }, [])\n\n    const getNavbarBg = () => {\n        if (window.pageYOffset >= 5) setNavbarClass('navbar bg')\n        else setNavbarClass('navbar')\n    }\n\n    return (\n            <nav className={navbarClass}>\n                <div className=\"logo-links-container\">\n                    <Link to='/'><img src={logo} alt=\"logo\" className=\"logo\" /></Link>\n                    <Link to='/browse'>Home</Link>\n                    <Link to='/about'>About</Link>\n                </div>\n                <div className=\"search-profile-contianer\">\n                    {(loggedInUser) ? <Avatar loggedInUser={ loggedInUser } /> : <Link to='/login'>Login & Signup</Link> }\n                </div>\n            </nav>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/exit.849cbe6e.svg\";","import React, { useState, useEffect, useRef } from 'react'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\n// import { useSelector } from 'react-redux'\nimport { useHistory, Route } from 'react-router-dom'\n\nimport { MoviePreviewControls } from './MoviePreviewControls'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { MovieDetails } from './MovieDetails'\n\nlet currTimeOut;\n\nexport function MoviePreview(props) {\n\n    const [currentTrailer, setCurrentTrailer] = useState(null)\n    const [imgClass, setImgClass] = useState('')\n    const isJumboTronCanPlay = useSelector(state => state.videoReducer.isJumboTronCanPlay)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const trailerRef = useRef(null)\n\n    useEffect(() => {\n        if (currentTrailer) startTrailer()\n    }, [currentTrailer])\n\n    const startTrailer = () => {\n        setTimeout(() => {\n            if (currentTrailer && trailerRef.current) {\n                setImgClass('fade-out')\n                trailerRef.current.play()\n            }\n        }, 500)\n    }\n\n    const onHoverPreviewStart = (id) => {\n        currTimeOut = setTimeout(() => {\n            setCurrentTrailer(id)\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false  })\n        }, 400)\n    }\n\n    const onHoverPreviewEnd = () => {\n        setCurrentTrailer(null)\n        setImgClass('')\n        clearTimeout(currTimeOut)\n    }\n\n    const onMovieClick = (ev) => {\n        ev.stopPropagation()\n        onHoverPreviewEnd()\n        history.push(`/browse/${props.id}`)\n    }\n\n    const easing = [0.6, 0.05, 0.01, 1]\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            scale: 1.65,\n            backgroundColor: '#141414',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        },\n        initial: {\n            scale: 1,\n            opacity: 1,\n            originX: 0.5,\n            originY: 0.75,\n            top: 0,\n            left: 0\n        },\n        exit: {\n            scale: 1,\n            opacity: 1,\n            top: 0,\n            left: 0,\n            backgroundColor: '#14141400',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        }\n    }\n\n    const controlsVariants = {\n        animateControls: {\n            opacity: 1,\n            backgroundColor: '#141414',\n            borderRadius: '0.35em',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        },\n        initialControls: {\n            opacity: 0,\n            borderRadius: '0.35em',\n        },\n        exitControls: {\n            opacity: 0,\n            backgroundColor: '#14141400',\n            transition: {\n                duration: .3,\n                ease: easing\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <motion.div className=\"movie-container\"\n                onHoverStart={() => onHoverPreviewStart(props.id)}\n                onHoverEnd={() => onHoverPreviewEnd()}\n                onClick={(ev) => onMovieClick(ev)}\n            >\n                <motion.img src={props.imgURL} alt={props.name} />\n                    <AnimatePresence exitBeforeEnter>\n                        {currentTrailer &&\n                            <motion.div\n                                initial=\"initial\"\n                                animate=\"animate\"\n                                exit=\"exit\"\n                                variants={variants}\n                                className=\"movie-container trailer\"\n                                onClick={(ev) => onMovieClick(ev)}\n                            >\n                                <motion.div className=\"img-vid-container\">\n                                    {\n                                    <React.Fragment>\n                                        <img className={`poster-img ${imgClass}`} src={props.imgURL} alt=\"\"/>\n                                            <motion.video ref={trailerRef} > \n                                                <source src={props.trailerURL} />\n                                            </motion.video>\n                                    </React.Fragment>\n                                    }\n                                </motion.div>\n                                <motion.div\n                                    initial=\"initialControls\"\n                                    animate=\"animateControls\"\n                                    exit=\"exitControls\"\n                                    variants={controlsVariants}>\n                                    <MoviePreviewControls genre={props.genre} name={props.name} />\n                                </motion.div>\n                            </motion.div>\n                        }\n                    </AnimatePresence>\n            </motion.div>\n        </React.Fragment>\n    )\n} \n","import React, { useEffect, useState, useRef } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux'\nimport { loadMovie, resetMovie } from '../store/actions/videoActions'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { MoviePreviewControls } from './MoviePreviewControls'\nimport { Navbar } from './Navbar'\nimport exit from '../assets/icons/exit.svg'\n\nexport const _MovieDetails = (props) => {\n\n    const { id } = useParams()\n    const videoEl = useRef(null)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        loadMovieDetails()\n        dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n        return () => {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: true })\n        }\n    }, [])\n\n    const loadMovieDetails = async () => {\n        try {\n            await props.loadMovie(id)\n        } catch (err) {\n            console.log('err in FE', err)\n        }\n    }\n\n    const togglePlayingVideo = () => {\n        if (videoEl.current.paused) videoEl.current.play()\n        else videoEl.current.pause()\n    }\n\n    const getGenres = () => {\n        const genres = props.currentMovie.genre.map((currGenre, idx) => {\n            if (idx === props.currentMovie.genre.length - 1) {\n                return <p key={idx}>{currGenre}</p>\n            } else return (\n                <p key={idx}>{currGenre}<span className=\"middle-dot\">·</span></p>\n            )\n        })\n        return genres\n    }\n\n    const closeMovieModal = (ev) => {\n        ev.stopPropagation()\n        dispatch(resetMovie())\n        history.push('/browse')\n    }\n\n    const easing = [0.6, 0.05, 0.01, 1]\n\n    const variants = {\n        animate: {\n            scale: 1,\n            opacity: 1,\n            transition: {\n                duration: 0.55,\n                ease: easing\n            }\n        },\n        initial: {\n            scale: 0.75,\n            opacity: 0,\n        },\n        exit: {\n            scale: 0,\n            opacity: 0,\n            transition: {\n                duration: 0.5,\n                ease: easing\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {props.currentMovie && (\n                <motion.div\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    exit=\"exit\"\n                    variants={variants}\n                    className=\"details-inner-container\" >\n                    <motion.div className=\"details-video-container\" onClick={() => togglePlayingVideo()}>\n                        <div className=\"details-exit-btn\" onClick={ closeMovieModal }><img src={exit} alt=\"exit\"/></div>\n                        <motion.video autoPlay className=\"details-video\" ref={videoEl} >\n                            <source src={props.currentMovie.trailerURL} />\n                        </motion.video>\n                        <motion.div className=\"grey-gradient\"></motion.div>\n                        <motion.div className=\"grey-bg\"></motion.div>\n                    </motion.div>\n                    {/* controls */}\n                    <motion.div className=\"details-text-container\">\n                        <motion.h2>{props.currentMovie.name}</motion.h2>\n                        <div className=\"genres-container\" style={{ fontSize: '1rem', marginBottom: '1rem' }}>{getGenres()}</div>\n                        <motion.p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Natus nostrum incidunt odio ad obcaecati necessitatibus quam officia. Deserunt eos, ab accusamus sapiente repellendus itaque dicta corrupti voluptatem ipsa, facere accusantium!</motion.p>\n                    </motion.div>\n                </motion.div>\n            )}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentMovie: state.videoReducer.currentMovie,\n        isJumboTronCanPlay: state.videoReducer.isJumboTronCanPlay\n    }\n}\n\nconst mapDispatchToProps = {\n    loadMovie\n}\n\nexport const MovieDetails = connect(mapStateToProps, mapDispatchToProps)(_MovieDetails)","import React, { useEffect, useState, useRef } from 'react'\nimport { videoService } from '../services/videoService'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadMovies } from '../store/actions/videoActions'\nimport { MoviePreview } from './MoviePreview'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport styled from 'styled-components'\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// Import Swiper styles\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\n\n// install Swiper components\nSwiperCore.use([Navigation, Pagination]);\n\nexport function MovieList(props) {\n\n    const dispatch = useDispatch()\n    const { movies } = useSelector(state => state.videoReducer)\n    const [listClassNames, setListClassNames] = useState('movies-container')\n\n    useEffect(() => {\n        loadMovies()\n    }, [])\n\n    async function loadMovies(){\n        try{\n            const movies = await videoService.getMoviePreviews()\n            dispatch({ type: 'SET_MOVIES', movies })\n        }catch(err){\n            console.log(err, 'error fetching movies')\n        }\n    }\n\n    const swiperConfig = {\n        spaceBetween: 3,\n        slidesPerView: 6,\n        slidesPerGroup: 6,\n        speed: 650,\n        navigation: true,\n        loop:true,\n        breakpoints: {\n            1400: {\n                slidesPerView: 6,\n                slidesPerGroup: 6, \n            },\n            1096: {\n                slidesPerView: 5,\n                slidesPerGroup: 5, \n            },\n            800: {\n                slidesPerView: 4,\n                slidesPerGroup: 4, \n            },\n            500: {\n                slidesPerView: 3,\n                slidesPerGroup: 3, \n                navigation: false\n            },\n            1: {\n                slidesPerView: 2,\n                slidesPerGroup: 2, \n                navigation: false\n            }\n        }\n    }\n\n    return (\n        <section className=\"list-container\" >\n            <h2>{ props.name }</h2>\n            <motion.div className={ listClassNames }\n                onHoverStart={() => setListClassNames('movies-container hovering') }\n                onHoverEnd={() => setListClassNames('movies-container') }\n                >\n                {movies.length &&\n                    <Swiper className={\"swiper-container\"}\n                        {...swiperConfig}\n                        onSwiper={(swiper) => {\n                            if (props.idx === 1) swiper.slideToLoop(7, 0, false)\n                            if (props.idx === 2) swiper.slideToLoop(13, 0, false)\n                        }}\n                    >\n                        {movies.map((movie, idx) => {\n                            return (\n                                <SwiperSlide key={movie._id}>\n                                    <MoviePreview\n                                        key={movie._id}\n                                        id={movie._id}\n                                        name={movie.name}\n                                        imgURL={movie.imgURL}\n                                        genre={movie.genre}  \n                                        trailerURL={movie.trailerURL}\n                                    />\n                                </SwiperSlide>\n                            )\n                        })}  \n                </Swiper>\n                }\n            </motion.div>      \n        </section>\n    )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <section className=\"footer-container\">\n            <div className=\"footer-divider\"></div>\n            <div className=\"inner-footer-contianer\">\n                <h4>This demo site was developed with ❤️ by Daniel Dante</h4>\n                <p>Using React, Redux, Sass, Node, Express, Framer-Motion, Swiper js, Google OAuth, Formik</p>\n                <div className=\"footer-links-container\">\n                    <div>\n                        <a target=\"blank\" href=\"https://www.linkedin.com/in/daniel-dante-61889b184/\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747720/white-linkedin-icon-transparent-background-28_n5l9wn.png\" alt=\"\" /><p>Linkedin</p> </a>\n                    </div> \n                    <div>\n                        <a target=\"blank\" href=\"https://github.com/xXDaniel123\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747481/github-icon-white-6_lajeqf.png\" alt=\"\" /><p>Github</p></a>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Jumbotron } from '../cmps/Jumbotron'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { resetMovie } from '../store/actions/videoActions'\nimport { videoService } from '../services/videoService'\nimport { MovieList } from '../cmps/MovieList'\nimport { Route, useHistory } from 'react-router-dom'\nimport { Footer } from '../cmps/Footer'\nimport { motion } from 'framer-motion'\nimport { MovieDetails } from '../cmps/MovieDetails'\n\nexport function NetflixApp() {\n\n    const { categories, currentMovie } = useSelector(state => state.videoReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    // useEffect(() => {\n    //     currentMovie ? document.querySelector('body').classList.add('disable-scroll') : document.querySelector('body').classList.remove('disable-scroll')\n    // }, [currentMovie])\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n    async function loadCategories(){\n        try{\n            const currCategories = await videoService.query()\n            dispatch({ type: 'SET_CATEGORIES', categories:  currCategories })\n        }catch(err){\n            console.log(err, 'error fetching categories')\n        }\n    }\n\n    const closeMovieModal = () => {\n        dispatch(resetMovie())\n        history.push('/browse')\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        exit: {\n            opacity: 0,\n        },\n        initial: {\n            opacity: 0,\n            y: 30\n        }\n    }\n\n    const pageTransition = {\n        duration: 0.45,\n        ease: 'easeOut',\n        delay: 0.25\n\n    }\n\n    return (\n        <motion.div className=\"app-container\"\n            exit=\"exit\"\n            animate=\"animate\"\n            initial=\"initial\"\n            variants={variants}\n            transition={pageTransition}\n        >\n            {categories.length \n                ? <React.Fragment>\n                    {currentMovie && <div className=\"screen\" onClick={ () => closeMovieModal() }></div>}\n                    <Jumbotron />\n                    <motion.section className=\"categories\"\n                        exit=\"exit\"\n                        animate=\"animate\"\n                        initial=\"initial\"\n                        transition={{ duration: 0.5, delay: 0.25, ease: 'easeOut' }}\n                    >\n                        {categories.map((category, idx) => {\n                            return (\n                                <MovieList idx={idx} key={category.id} name={category.name} />\n                            )\n                        })}\n                    </motion.section>\n                    <Footer />\n                </React.Fragment>\n                : <h4>loading...</h4> \n            }\n            <Route path=\"/browse/:id\" component={ MovieDetails } />\n        </motion.div>\n    )\n}","import React from 'react'\nimport { motion } from 'framer-motion'\n\nexport const AboutPage = () => {\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 70\n        },\n        initial: {\n            opacity: 0,\n            y: 120\n        }\n    }\n\n    return (\n        <motion.div\n            animate=\"animate\"\n            initial=\"initial\"\n            variants={variants}\n            transition={{ duration: 0.35, ease: 'easeOut'}}\n        >\n            <div className=\"inner-footer-contianer about-container\">\n                <motion.h4\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.2}}\n\n                >   This demo site was developed with ❤️ by Daniel Dante</motion.h4>\n                <motion.p\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.45, ease: 'easeOut', delay: 0.3}}\n\n                >Using React, Redux, Sass, Node, Express, Framer-Motion, Swiper js, Google OAuth, MongoDB, Formik</motion.p>\n                <motion.div className=\"footer-links-container\"\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.45, ease: 'easeOut', delay: 0.42 }}\n                >\n                    <div>\n                        <a target=\"blank\" href=\"https://www.linkedin.com/in/daniel-dante-61889b184/\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747720/white-linkedin-icon-transparent-background-28_n5l9wn.png\" alt=\"\" /><p>Linkedin</p> </a>\n                    </div>\n                    <div>\n                        <a target=\"blank\" href=\"https://github.com/xXDaniel123\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747481/github-icon-white-6_lajeqf.png\" alt=\"\" /><p>Github</p></a>\n                    </div>\n                </motion.div>\n            </div>\n        </motion.div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { onUserSignup, onUserLogin, onGoogleSignup } from '../store/actions/userActions';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { motion } from 'framer-motion';\nimport logo from '../assets/icons/logo.svg'\n\nconst clientId = '168447752977-topi06sp3n60pk37e8j5dg91lnjophvi.apps.googleusercontent.com'\n\nexport const LoginPage = () => {\n    \n    const [isErrorShown, setIsErrorShown] = useState(false)\n    const [toggleMode, setToggleMode] = useState('signup')\n    const [userDetails, setUserDetails] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    })\n\n    // toggle between login and sign up mode\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleChange = ({ target }) => {\n        setIsErrorShown(false)\n        const currValue = target.value.replace(/\\s(?=\\s)/g, '')\n        setUserDetails(prevDetails => ({ ...prevDetails, [target.name]: currValue }))\n    }\n\n    const onSignup = async (ev) => {\n        ev.preventDefault()\n        const newUser = {\n            email: userDetails.email.trim(),\n            fullName: userDetails.firstName.trim() + ' ' + userDetails.lastName.trim(),\n            password: userDetails.password\n        }\n        if (!newUser.email || !userDetails.firstName.trim() || !userDetails.lastName.trim() || !newUser.password) {\n            setIsErrorShown(true)\n            return\n        }\n\n        try {\n            await dispatch(onUserSignup(newUser))\n            history.replace('/browse')\n        } catch (err) {\n            setIsErrorShown(true)\n        }\n    }\n\n    const onLogin = async (ev) => {\n        ev.preventDefault()\n        setIsErrorShown(false)\n        const userToLogin = {\n            email: userDetails.email.trim(),\n            password: userDetails.password.trim()\n        }\n        // need to show error message\n        if (!userToLogin.email || !userToLogin.password) {\n            setIsErrorShown(true)\n            return\n        }\n\n        try {\n            await dispatch(onUserLogin(userToLogin))\n            history.replace('/browse')\n        } catch (err) {\n            setIsErrorShown(true)\n        }\n    }\n\n    const onSuccess = async (res) => {\n        try{\n            await dispatch(onGoogleSignup(res))\n            history.replace('/browse')\n        } catch(err) {\n            setIsErrorShown(true)\n            console.log('error on front end')\n        }\n    }\n\n    const onFailure = (res) => {\n        setIsErrorShown(true)\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        exit: {\n            opacity: 0,\n            y: 24\n        },\n        initial: {\n            opacity: 0,\n            y: 24\n        }\n    }\n\n    return (\n        <div className=\"login-container\">\n            <Link to='/'><img src={logo} alt=\"logo\" className=\"logo\" /></Link>\n            <div className=\"background-container\">\n                <div className=\"black-screen\"></div>\n                <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1605007211/hero_image_lnjtd8.jpg\" alt=\"\" />\n            </div>\n            <motion.div className=\"form-outer-container\"\n                exit=\"exit\"\n                animate=\"animate\"\n                initial=\"initial\"\n                variants={variants}\n                transition={{ duration: 0.4 }}\n            >\n                <div className=\"form-container\">\n                { toggleMode === 'signup' && \n                <React.Fragment>\n                        <Formik\n                            validate={values => {\n                                const errors = {};\n                                if (!values.email) { errors.email = 'Required'; }\n                                else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) { errors.email = 'Invalid email address'; } return errors;\n                            }} onSubmit={ onSignup }>\n                            {({ isSubmitting, }) => (\n                                <form className=\"inner-form-container\" onSubmit={ onSignup }>\n                                    <h1>Sign Up</h1>\n                                    <input className=\"field\" type=\"text\" name=\"firstName\" onChange={handleChange} placeholder=\"First Name\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"text\" name=\"lastName\" onChange={ handleChange } placeholder=\"Last Name\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"email\" name=\"email\" onChange={ handleChange } placeholder=\"Email address\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"password\" name=\"password\" onChange={ handleChange } placeholder=\"Password\" autoComplete=\"off\" />\n                                    <button type=\"submit\" disabled={ isSubmitting }>Sign Up</button>\n                                </form>\n                            )}\n                        </Formik>\n                    </React.Fragment>\n                }\n                { toggleMode === 'login' && \n                    <React.Fragment>\n                        <Formik\n                            validate={values => {\n                                const errors = {};\n                                if (!values.email) { errors.email = 'Required'; }\n                                else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) { errors.email = 'Invalid email address'; } return errors;\n                            }} onSubmit={ onLogin }>\n                            {({ isSubmitting, }) => (\n                                <form className=\"inner-form-container\" onSubmit={ onLogin }>\n                                    <h1>Log In</h1>\n                                    <input className=\"field\" type=\"email\" name=\"email\" onChange={ handleChange } placeholder=\"Email address\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"password\" name=\"password\" onChange={ handleChange } placeholder=\"Password\" autoComplete=\"off\" />\n                                    <button type=\"submit\" disabled={ isSubmitting }>Log in</button>\n                                </form>\n                            )}\n                        </Formik>\n                    </React.Fragment>\n                }\n                    <div><br/><h4>or</h4><br/></div>\n                    <div className=\"google-login-btn\">\n                        <GoogleLogin \n                            clientId={clientId}\n                            buttonText={toggleMode === 'signup' ? \"Sign up with Google\" : \"Log in with google\"}\n                            onSuccess={onSuccess}\n                            onFailure={onFailure}\n                            cookiePolicy={'single_host_origin'}\n                            isSignedIn={false} // check this after to true to keep logged in?\n                        />\n                    </div>\n                    { isErrorShown && <div className=\"error-container\">\n                            Something went wrong... <br/>\n                            Check the details and try again?\n                        </div>\n                    }\n                    <div className=\"toggle-signup-mode\">\n                    { (toggleMode === 'signup') ? \n                            <div>Already user?<br/><button onClick={() => setToggleMode('login')}>Login</button></div>\n                            : <div><button onClick={() => setToggleMode('signup')}>Sign up</button></div>\n                    }\n                    </div>\n                </div>\n            </motion.div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/icons/logo.svg'\n\nexport const WelcomePage = () => {\n\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        initial: {\n            opacity: 0,\n            y: 70\n        }\n    }\n\n    return (\n        <div className=\"welcome-page-container\" >\n            <div className=\"background-container\">\n                <div className=\"black-screen mobile-black-screen\"></div>\n                <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1605007211/hero_image_lnjtd8.jpg\" alt=\"\" />\n            </div>\n            <motion.div className=\"directions-container\"\n                animate=\"animate\"\n                initial=\"initial\"\n                variants={variants}\n                transition={{ duration: 0.4, ease: 'easeOut'}}\n            >\n                <motion.img \n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.15 }} \n                    style={{ minWidth: '10rem' }}\n                    src={logo} alt=\"logo\"/>\n                <motion.h2\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.35 }}\n                    style={{ lineHeight: 1.4, padding: '0 10vw' }}\n                >Welcome to my Netflix Clone, MOVIFY</motion.h2>\n                <motion.div \n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.425 }}\n                    className=\"directions-buttons-container\"\n                    >\n                    <Link to='browse'><button>Enter as Guest</button></Link>\n                    <Link to='login'><button>login & Signup</button></Link>\n                </motion.div>\n            </motion.div>\n            <div className=\"black-gradient\" style={{ zIndex: -1 }}></div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/hamburger.e0d04c19.svg\";","import React from 'react'\nimport hamburger from '../assets/icons/hamburger.svg'\nimport logo from '../assets/icons/logo.svg'\n\nexport const NavbarMobile = (props) => {\n    return (\n        <nav className=\"navbar-mobile\" \n            style={{ backgroundColor: props.isDrawerShown ? '#020202' : '#0000004f' }} >\n            <img src={hamburger} alt=\"\" onClick={props.toggleDrawer} />\n            <img src={logo} alt=\"logo\"/>\n        </nav>\n    )\n}","export default __webpack_public_path__ + \"static/media/rightArrow.9996f612.svg\";","import React from 'react'\nimport { useState } from 'react'\nimport { NavLink, Link, useHistory } from 'react-router-dom'\nimport { NavbarMobile } from './NavbarMobile'\nimport { useSelector, useDispatch } from 'react-redux'\nimport rightArrow from '../assets/icons/rightArrow.svg'\nimport { onUserLogout } from '../store/actions/userActions'\n\nexport const Drawer = () => {\n\n    const [isDrawerShown, setIsDrawerShown] = useState(false)\n    const { loggedInUser } = useSelector(state => state.userReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const toggleDrawer = () => {\n        setIsDrawerShown(!isDrawerShown)\n    }\n\n    const onLogout = () => {\n        if (loggedInUser) {\n            try {\n                dispatch(onUserLogout())\n                history.replace('/login')\n            } catch (err) {\n                console.log('there was error loging out', err)\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <NavbarMobile toggleDrawer={toggleDrawer} isDrawerShown={isDrawerShown} />\n            <div className=\"nav-drawer\" style={{ transform: isDrawerShown ? 'translateX(0%)' : 'translateX(-100%)', visibility: isDrawerShown ? 'visible' : 'hidden' }}>\n                <div className=\"drawer-links-container\">\n                    {!loggedInUser\n                    ?   <Link to=\"/login\" className=\"login-drawer-link\" onClick={() => setIsDrawerShown(false)}>\n                            Login & Signup \n                            <img src={rightArrow} alt=\"\"/>\n                        </Link>\n                    :   <div className=\"navbar-avatar-container\">\n                            <img src={loggedInUser.imgUrl} alt=\"\" />\n                            <h4>{loggedInUser.fullName}</h4>\n                            <button onClick={onLogout}>Log out</button>\n                        </div>\n\n                    }\n                    <div className=\"drwer-divider\"></div>\n                    <NavLink to=\"/browse\" activeClassName=\"active-link\" onClick={() => setIsDrawerShown(false) }>Home</NavLink>\n                    <NavLink to=\"/about\" activeClassName=\"active-link\" onClick={() => setIsDrawerShown(false)}>About</NavLink>\n                    <NavLink exact to=\"/\" activeClassName=\"active-link\" onClick={() => setIsDrawerShown(false)}>Welcome</NavLink>\n                </div>\n            </div>\n            <div className=\"mobile-black-screen\" onClick={() => setIsDrawerShown(false) } style={{ visibility: isDrawerShown ? 'visible' : 'hidden', opacity: isDrawerShown ? '1' : '0' }}></div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState }  from 'react';\nimport { NetflixApp } from './pages/NetflixApp'\nimport './assets/styles/global.scss'\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { MovieDetails } from './cmps/MovieDetails';\nimport { AboutPage } from './pages/AboutPage';\nimport { Navbar } from './cmps/Navbar';\nimport { LoginPage } from './pages/LoginPage';\nimport { useSelector } from 'react-redux';\nimport { WelcomePage } from './pages/WelcomePage';\nimport { Drawer } from './cmps/Drawer';\nimport { AnimatePresence } from 'framer-motion';\n\nfunction App() {\n\n  const location = useLocation()\n  \n  return (\n    <React.Fragment>\n      {(location.pathname !== '/login' && location.pathname !== '/') && <Navbar />}\n      {(location.pathname !== '/login' && location.pathname !== '/') && <Drawer />}\n      <AnimatePresence>\n        <Switch>\n          <Route path=\"/about\" component={AboutPage } />\n          <Route path=\"/browse\" component={ NetflixApp } />\n          <Route path=\"/login\" component={ LoginPage } />\n          <Route path=\"/\" component={ WelcomePage } />\n        </Switch>\n      </AnimatePresence>\n    </React.Fragment>\n  )\n}\n\nexport default App;","const initialState = {\n    categories: [],\n    movies: [],\n    currentMovie: null,\n    isJumboTronCanPlay: true\n}\n\nexport function videoReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_CATEGORIES':\n            return {\n                ...state,\n                categories: action.categories\n            }\n\n        case 'SET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies\n            }\n\n        case 'SET_MOVIE':\n            return {\n                ...state,\n                currentMovie: action.currentMovie\n            }\n\n        case 'RESET_MOVIE':\n            return {\n                ...state,\n                currentMovie: null\n            }\n\n            // fix this one with extra for true \n        case 'TOGGLE_JUMBOTRON_VIDEO':\n            return {\n                ...state,\n                isJumboTronCanPlay: action.isJumboTronCanPlay\n            }\n\n            default:\n                return state\n    }\n}","// let getLoggedinUser = (sessionStorage.USER) ? JSON.stringify(sessionStorage.USER) : null\n\nconst initialState = {\n    loggedInUser: (sessionStorage.USER) ? JSON.parse(sessionStorage.USER) : null,\n}\n\nexport function userReducer(state = initialState, action) {\n\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n\n            default:\n                return state\n    }\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { videoReducer } from './reducers/videoReducer.js';\nimport { userReducer } from './reducers/userReducer.js';\n\nconst rootReducer = combineReducers({\n    videoReducer,\n    userReducer\n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <Router> \n        <App />\n      </Router>\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}