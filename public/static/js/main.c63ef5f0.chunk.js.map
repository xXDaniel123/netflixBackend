{"version":3,"sources":["assets/icons/speaker.svg","assets/icons/off.svg","assets/icons/on.svg","cmps/Jumbotron.jsx","services/httpService.js","services/videoService.js","assets/icons/thumbsUp.svg","assets/icons/thumbsDown.svg","assets/icons/downArrow.svg","cmps/Controls.jsx","cmps/MoviePreviewControls.jsx","assets/icons/modalArrow.svg","services/storageService.js","services/userService.js","store/actions/userActions.js","cmps/Avatar.jsx","cmps/Navbar.jsx","cmps/MovieDetails.jsx","cmps/MoviePreview.jsx","store/actions/videoActions.js","cmps/MovieList.jsx","cmps/Footer.jsx","pages/NetflixApp.jsx","pages/AboutPage.jsx","pages/LoginPage.jsx","pages/WelcomePage.jsx","App.jsx","store/reducers/videoReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["Jumbotron","useState","logoClass","setLogoClass","isMuted","setIsMuted","isJumboTronCanPlay","useSelector","state","videoReducer","dispatch","useDispatch","mainVideoEl","useRef","useEffect","window","addEventListener","scrollToStopJumbotron","addClassTimeout","setTimeout","clearTimeout","removeEventListener","current","pause","pageYOffset","type","className","onClick","paused","play","ev","stopPropagation","muted","toggleMute","src","speaker","alt","off","on","autoPlay","ref","BASE_URL","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","location","assign","search","categoryList","id","name","httpService","movies","movieToReturn","videoService","query","getMovieById","getMoviePreviews","Controls","thumbsUp","thumbsDown","downArrow","MoviePreviewControls","props","genre","map","currGenre","idx","length","userService","login","signup","logOut","googleSignup","userCredentials","user","sessionStorage","setItem","JSON","stringify","_handleLogin","localStorage","clear","token","onUserSignup","newUser","loggedInUser","onUserLogin","onGoogleSignup","Avatar","isModalShown","setIsModalShown","userReducer","history","useHistory","div","onHoverStart","onHoverEnd","imgUrl","animate","exit","initial","variants","opacity","transition","duration","modalArrow","fullName","replace","err","Navbar","navbarClass","setNavbarClass","getNavbarBg","to","currTimeOut","mapDispatchToProps","loadMovie","currentMovie","MovieDetails","connect","useParams","videoEl","loadMovieDetails","easing","scale","ease","Fragment","video","trailerURL","h2","style","fontSize","marginBottom","p","MoviePreview","currentTrailer","setCurrentTrailer","imgClass","setImgClass","trailerRef","startTrailer","onHoverPreviewEnd","onMovieClick","push","backgroundColor","originX","originY","top","left","controlsVariants","animateControls","borderRadius","initialControls","exitControls","img","imgURL","exitBeforeEnter","MovieList","loadMovies","listClassNames","setListClassNames","spaceBetween","slidesPerView","slidesPerGroup","speed","navigation","loop","onSwiper","swiper","slideToLoop","movie","_id","SwiperCore","use","Navigation","Pagination","Footer","target","href","width","marginRight","NetflixApp","categories","currCategories","loadCategories","closeMovieModal","pageTransition","section","category","AboutPage","y","LoginPage","isErrorShown","setIsErrorShown","toggleMode","setToggleMode","firstName","lastName","email","password","userDetails","setUserDetails","handleChange","currValue","value","prevDetails","onSignup","preventDefault","trim","onLogin","userToLogin","onSuccess","validate","values","errors","test","onSubmit","isSubmitting","onChange","placeholder","autoComplete","disabled","clientId","buttonText","onFailure","cookiePolicy","isSignedIn","WelcomePage","delay","App","useLocation","document","querySelector","classList","add","remove","path","component","initialState","USER","parse","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c63ef5f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/speaker.36124fcd.svg\";","export default __webpack_public_path__ + \"static/media/off.5893ca55.svg\";","export default __webpack_public_path__ + \"static/media/on.f00978e4.svg\";","import React from 'react'\nimport { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport speaker from '../assets/icons/speaker.svg'\nimport off from '../assets/icons/off.svg'\nimport on from '../assets/icons/on.svg'\n\nexport function Jumbotron() {\n\n    const [logoClass, setLogoClass] = useState('jumbotron-logo')\n    const [isMuted, setIsMuted] = useState(true)\n    const isJumboTronCanPlay = useSelector(state => state.videoReducer.isJumboTronCanPlay)\n    const dispatch = useDispatch()\n    const mainVideoEl = useRef(null)\n\n    useEffect(() => {\n        window.addEventListener('scroll', scrollToStopJumbotron)\n        const addClassTimeout = setTimeout(() => {\n            setLogoClass( 'jumbotron-logo resized-logo' )\n        }, 4000)\n        return () => {\n            clearTimeout(addClassTimeout)\n            window.removeEventListener('scroll', scrollToStopJumbotron)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!isJumboTronCanPlay) mainVideoEl.current.pause()\n    }, [isJumboTronCanPlay])\n\n    const scrollToStopJumbotron = () => {\n        if (window.pageYOffset > 400) {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n            mainVideoEl.current.pause()\n        }\n    }\n\n    const toggleJumbotronVideo = () => {\n        if (mainVideoEl.current.paused) {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: true })\n            mainVideoEl.current.play()\n        }\n        else {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n            mainVideoEl.current.pause()}\n    }\n\n    const toggleMute = (ev) => {\n        ev.stopPropagation()\n        setIsMuted(!isMuted)\n        mainVideoEl.current.muted = !mainVideoEl.current.muted\n    }\n    \n    return (\n        <section className=\"jumbotron-container\" onClick={() => toggleJumbotronVideo()}>\n            <div className=\"mute-btn-container\" onClick={ (ev) => toggleMute(ev) }>\n                <img src={speaker} alt=\"toggle-mute\"/>\n                <img src={isMuted ? off : on} alt=\"\"/>\n            </div>\n            <div className=\"video-container\">\n                <div className={logoClass} >\n                    <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1604490766/AAAABcxoPeN-DpwsPN_8-2FgylY9Qcke_I3SPAc8AtGzb-XiQxoWFGRocQ_LsTY7210f-xKKMr0DKMurSA5L84AHRrY2PSEEKDIm92fglsbdsFLd5INW09Mu0vCr05WOoDPDkchhwzDvUnBlPLzGFrGo31x-50dgKRWWdP8zZfl3KO4BEGgJRpd6nGbG7d3d0iA6UQRr0IUwWXA_xq6uso.png\" alt=\"\"/>\n                </div>\n                <video autoPlay muted ref={mainVideoEl} > \n                    <source src=\"https://res.cloudinary.com/da0i9wy5t/video/upload/v1603972997/David_Attenborough__A_Life_on_Our_Planet___Official_Trailer___Netflix_gw0wrf.mp4\" type=\"video/mp4\" />\n                </video>\n                <div className=\"jumbotron-grey-gradient\"></div>\n                <div className=\"jumbotron-grey-bg\"></div>\n            </div>\n        </section>\n    )\n}","import Axios from 'axios';\n\n// for db.json\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\n    '/api/' :\n    '//localhost:3030/api/'\n\nvar axios = Axios.create({\n    withCredentials: true\n});\n\nexport default {\n    get(endpoint, data) {\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'get', data) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data;\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\n        console.dir(err);\n        if (err.response && err.response.status === 401) {\n            window.location.assign('/#/login');\n        }\n        throw err;\n    }\n}","// import axios from \"axios\"\nimport httpService from \"./httpService\";\n\nasync function query(search) {\n    return categoryList\n}\n\nconst categoryList=[\n    {\n        id: 'c101',\n        name: 'New Releases'\n    },\n    {\n        id: 'c102',\n        name: 'Action'\n    },\n    {\n        id: 'c103',\n        name: 'Drama'\n    },\n]\n\nasync function getMoviePreviews() {\n    const movies = await httpService.get('movie')\n    return movies\n}\n\nasync function getMovieById(id){\n    const movieToReturn = await httpService.get(`movie/${id}`)\n    return movieToReturn\n}\n\nexport const videoService = {\n    query,\n    categoryList,\n    getMovieById,\n    getMoviePreviews\n}\n","export default __webpack_public_path__ + \"static/media/thumbsUp.46731bd4.svg\";","export default __webpack_public_path__ + \"static/media/thumbsDown.b112ce99.svg\";","export default __webpack_public_path__ + \"static/media/downArrow.720f6c4d.svg\";","import React from 'react'\nimport thumbsDown from '../assets/icons/thumbsUp.svg'\nimport thumbsUp from '../assets/icons/thumbsDown.svg'\nimport downArrow from '../assets/icons/downArrow.svg'\n\n\nexport const Controls = () => {\n\n    return (\n        <div className=\"icons-container\">\n            <div className=\"thumbs-container\">\n                <div className=\"icon-container\"><img src={thumbsUp} alt=\"\" /></div>\n                <div className=\"icon-container\"><img src={thumbsDown} alt=\"\" /></div>\n            </div>\n            <div className=\"more-info-container\"><h4>More info</h4><div className=\"icon-container arrow\"><img src={downArrow} alt=\"\" /> </div></div>\n        </div>\n    )\n}","import React from 'react'\nimport { Controls } from './Controls'\n\nexport const MoviePreviewControls = (props) => {\n\n    const getGenres = () => {\n        const genres = props.genre.map((currGenre, idx) => {\n            if (idx === props.genre.length - 1) {\n                return <p key={idx}>{currGenre}</p>\n            } else return (\n                <p key={idx}>{currGenre}<span className=\"middle-dot\">·</span></p>\n            )\n        })\n        return genres\n    }\n\n    return (\n        <div className=\"controls-container\">\n            <div><h6>{props.name}</h6></div>\n            <div className=\"inner-controls-container\"><Controls /></div>\n            <div className=\"genres-container\">{ getGenres() }</div>\n        </div>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/modalArrow.20d3ba61.svg\";","function loadFromStorage(key) {\n    var val = localStorage.getItem(key)\n    return (val) ? JSON.parse(val) : null;\n}\n\nfunction saveToStorage(key, val) {\n    localStorage[key] = JSON.stringify(val);\n}\n\nexport default {\n    loadFromStorage,\n    saveToStorage\n}","import httpService from \"./httpService\";\nimport storageService from \"./storageService\";\n\n// CRUD\n\nconst userService = {\n    login,\n    signup,\n    logOut,\n    googleSignup\n    // checkForLoggedInUser,\n    // update,\n    // getUserbyId\n}\n\nexport default userService\n\nasync function login(userCredentials){\n    const user = await httpService.post('auth/login', userCredentials)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\nasync function signup(userCredentials){\n    const user = await httpService.post('auth/signup', userCredentials)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\nasync function logOut(){\n    await httpService.post('auth/logout')\n    localStorage.clear()\n    sessionStorage.clear()\n}\n\nasync function googleSignup(token) {\n    const user = await httpService.post('google/signup', token)\n    sessionStorage.setItem('USER', JSON.stringify(user))\n    return _handleLogin(user)\n}\n\n// async function checkForLoggedInUser() {\n//     console.log('yes');\n    \n//     const user = storageService.loadFromStorage('USER')\n//     if (user) {\n//         // keep user logged in with sending a request to server\n//     }\n// }\n\nfunction _handleLogin(user){\n    localStorage.setItem('USER', JSON.stringify(user))\n    return user\n}","import userService from \"../../services/userService\";\n\nexport function onUserSignup(userCredentials) {\n    return async dispatch => {\n        try {\n            const newUser = await userService.signup(userCredentials)\n            dispatch({ type: 'SET_USER', loggedInUser: newUser })\n        } catch (err) {\n            console.log(err, 'error signing up')\n            throw err\n        }\n    }\n}\n\nexport function onUserLogout(){\n    return async dispatch => {\n        try {\n            await userService.logOut()\n            dispatch({ type: 'SET_USER', loggedInUser: null })\n        } catch (err) {\n            console.log('cannot logout', err)\n            throw err\n        }\n    }\n}\n\nexport function onUserLogin(userCredentials){\n    return async dispatch => {\n        try {\n            const user = await userService.login(userCredentials)\n            dispatch({ type: 'SET_USER', loggedInUser: user })\n        } catch (err){\n            console.log('cannot login', err)\n            throw err\n        }\n    }\n}\n\nexport function onGoogleSignup(token){\n    return async dispatch => {\n        try{\n            // code here to send to service the token \n            // that will send the token to server\n            // server will authenticate the details\n            // await userService.googleSignup(token)\n            const user = await userService.googleSignup(token)\n            dispatch({ type: 'SET_USER', loggedInUser: user })\n        } catch (err) {\n            console.log('error on google signup', err)\n            throw err\n        }\n    }\n}\n\n// export function checkLoggedInUser(){\n//     return async dispatch => {\n//         try {\n//             await userService.checkForLoggedInUser()\n//             // if(user) dispatch({ type: 'SET_USER', loggedInUser: user })\n//         } catch (err) {\n//             console.log('no user in local storage');\n//         }\n//     }\n// }","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport modalArrow from '../assets/icons/modalArrow.svg'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { onUserLogout } from '../store/actions/userActions'\n\nexport const Avatar = (props) => {\n\n    // fix its z index of the modal\n    const [isModalShown, setIsModalShown] = useState(false)\n    const {loggedInUser} = useSelector(state => state.userReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const onLogout = () => {\n        if(loggedInUser){\n            try {\n                dispatch(onUserLogout())\n                history.replace('/login')\n            } catch (err) {\n                // show error message\n                console.log('there was error loging out', err)\n            }\n        }\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            transition: {\n                duration: 0.2,\n            }\n        },\n        exit: {\n            opacity: 0,\n            transition: {\n                duration: 0.2,\n            }\n        },\n        initial: {\n            opacity: 0,\n        }\n    }\n    \n    return (\n        <motion.div className=\"avatar-container\"\n            onHoverStart={ () => setIsModalShown(true) }\n            onHoverEnd={ () => setIsModalShown(false) }\n        >\n            <div>\n                <div className=\"avatar-img-container\">\n                    <img src={props.loggedInUser.imgUrl} alt=\"\" />\n                    </div>\n            </div>\n            {isModalShown && \n                <motion.div\n                        animate=\"animate\"\n                        exit=\"exit\"\n                        initial=\"initial\"\n                        variants={variants}\n                        className=\"arrow-container\"\n                    >\n                        <img src={ modalArrow } alt=\"\"/>\n                        <div className=\"avatar-modal\">\n                            <div className=\"avatar-modal-el-container\">\n                                <h4>Hi {loggedInUser.fullName}</h4>\n                                <div className=\"logout-container\">\n                                    <div className=\"line-through\"></div>\n                                    <button onClick={ onLogout }>Log out</button>\n                                </div>\n                            </div>\n                        </div>\n                </motion.div>\n            }\n        </motion.div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Avatar } from './Avatar'\n\n\nexport function Navbar() {\n\n    const [navbarClass, setNavbarClass] = useState('navbar')\n    const { loggedInUser } = useSelector(state => state.userReducer)\n    \n    useEffect(() => {\n        window.addEventListener('scroll', getNavbarBg)\n        return () => {\n            window.removeEventListener('scroll', getNavbarBg)\n        }\n    }, [])\n\n    const getNavbarBg = () => {\n        if (window.pageYOffset >= 5) setNavbarClass('navbar bg')\n        else setNavbarClass('navbar')\n    }\n\n    return (\n        <nav className={navbarClass}>\n            <div className=\"logo-links-container\">\n                <Link to='/'><img src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" alt=\"logo\" className=\"logo\" /></Link>\n                <Link to='/browse'>Home</Link>\n                <Link to='/about'>About</Link>\n            </div>\n            <div className=\"search-profile-contianer\">\n                {(loggedInUser) ? <Avatar loggedInUser={ loggedInUser } /> : <Link to='/login'>Login & Signup</Link> }\n            </div>\n        </nav>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux'\nimport { loadMovie } from '../store/actions/videoActions'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { MoviePreviewControls } from './MoviePreviewControls'\nimport { Navbar } from './Navbar'\n\nexport const _MovieDetails = (props) => {\n\n    const { id } = useParams()\n    const videoEl = useRef(null)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        loadMovieDetails()\n        dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false })\n        return () => {\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: true })\n        }\n    }, [])\n\n    const loadMovieDetails = async () => {\n        try {\n            await props.loadMovie(id)\n        } catch (err) {\n            console.log('err in FE', err)\n        }\n    }\n\n    const togglePlayingVideo = () => {\n        if (videoEl.current.paused) videoEl.current.play()\n        else videoEl.current.pause()\n    }\n\n    const getGenres = () => {\n        const genres = props.currentMovie.genre.map((currGenre, idx) => {\n            if (idx === props.currentMovie.genre.length - 1) {\n                return <p key={idx}>{currGenre}</p>\n            } else return (\n                <p key={idx}>{currGenre}<span className=\"middle-dot\">·</span></p>\n            )\n        })\n        return genres\n    }\n\n    const easing = [0.6, 0.05, 0.01, 1]\n\n    const variants = {\n        animate: {\n            scale: 1,\n            opacity: 1,\n            transition: {\n                duration: 0.55,\n                ease: easing\n            }\n        },\n        initial: {\n            scale: 0.75,\n            opacity: 0,\n        },\n        exit: {\n            scale: 0,\n            opacity: 0,\n            transition: {\n                duration: 0.5,\n                ease: easing\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {props.currentMovie && (\n                <motion.div\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    exit=\"exit\"\n                    variants={variants}\n                    className=\"details-inner-container\" >\n                    <motion.div className=\"details-video-container\" onClick={() => togglePlayingVideo()}>\n                        <motion.video autoPlay className=\"details-video\" ref={videoEl} >\n                            <source src={props.currentMovie.trailerURL} />\n                        </motion.video>\n                        <motion.div className=\"grey-gradient\"></motion.div>\n                        <motion.div className=\"grey-bg\"></motion.div>\n                    </motion.div>\n                    {/* controls */}\n                    <motion.div className=\"details-text-container\">\n                        <motion.h2>{props.currentMovie.name}</motion.h2>\n                        <div className=\"genres-container\" style={{ fontSize: '1rem', marginBottom: '1rem' }}>{getGenres()}</div>\n                        <motion.p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Natus nostrum incidunt odio ad obcaecati necessitatibus quam officia. Deserunt eos, ab accusamus sapiente repellendus itaque dicta corrupti voluptatem ipsa, facere accusantium!</motion.p>\n                    </motion.div>\n                </motion.div>\n            )}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentMovie: state.videoReducer.currentMovie,\n        isJumboTronCanPlay: state.videoReducer.isJumboTronCanPlay\n    }\n}\n\nconst mapDispatchToProps = {\n    loadMovie\n}\n\nexport const MovieDetails = connect(mapStateToProps, mapDispatchToProps)(_MovieDetails)","import React, { useState, useEffect, useRef } from 'react'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\n// import { useSelector } from 'react-redux'\nimport { useHistory, Route } from 'react-router-dom'\n\nimport { MoviePreviewControls } from './MoviePreviewControls'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { MovieDetails } from './MovieDetails'\n\nlet currTimeOut;\n\nexport function MoviePreview(props) {\n\n    const [currentTrailer, setCurrentTrailer] = useState(null)\n    const [imgClass, setImgClass] = useState('')\n    const isJumboTronCanPlay = useSelector(state => state.videoReducer.isJumboTronCanPlay)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const trailerRef = useRef(null)\n\n    useEffect(() => {\n        if (currentTrailer) startTrailer()\n    }, [currentTrailer])\n\n    const startTrailer = () => {\n        setTimeout(() => {\n            if (currentTrailer && trailerRef.current) {\n                setImgClass('fade-out')\n                trailerRef.current.play()\n            }\n        }, 500)\n    }\n\n    const onHoverPreviewStart = (id) => {\n        currTimeOut = setTimeout(() => {\n            setCurrentTrailer(id)\n            dispatch({ type: 'TOGGLE_JUMBOTRON_VIDEO', isJumboTronCanPlay: false  })\n        }, 400)\n    }\n\n    const onHoverPreviewEnd = () => {\n        setCurrentTrailer(null)\n        setImgClass('')\n        clearTimeout(currTimeOut)\n    }\n\n    const onMovieClick = (ev) => {\n        ev.stopPropagation()\n        onHoverPreviewEnd()\n        history.push(`/browse/${props.id}`)\n    }\n\n    const easing = [0.6, 0.05, 0.01, 1]\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            scale: 1.65,\n            backgroundColor: '#141414',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        },\n        initial: {\n            scale: 1,\n            opacity: 1,\n            originX: 0.5,\n            originY: 0.75,\n            top: 0,\n            left: 0\n        },\n        exit: {\n            scale: 1,\n            opacity: 1,\n            top: 0,\n            left: 0,\n            backgroundColor: '#14141400',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        }\n    }\n\n    const controlsVariants = {\n        animateControls: {\n            opacity: 1,\n            backgroundColor: '#141414',\n            borderRadius: '0.35em',\n            transition: {\n                duration: .35,\n                ease: easing\n            }\n        },\n        initialControls: {\n            opacity: 0,\n            borderRadius: '0.35em',\n        },\n        exitControls: {\n            opacity: 0,\n            backgroundColor: '#14141400',\n            transition: {\n                duration: .3,\n                ease: easing\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <motion.div className=\"movie-container\"\n                onHoverStart={() => onHoverPreviewStart(props.id)}\n                onHoverEnd={() => onHoverPreviewEnd()}\n                onClick={(ev) => onMovieClick(ev)}\n            >\n                <motion.img src={props.imgURL} alt={props.name} />\n                    <AnimatePresence exitBeforeEnter>\n                        {currentTrailer &&\n                            <motion.div\n                                initial=\"initial\"\n                                animate=\"animate\"\n                                exit=\"exit\"\n                                variants={variants}\n                                className=\"movie-container trailer\"\n                                onClick={(ev) => onMovieClick(ev)}\n                            >\n                                <motion.div className=\"img-vid-container\">\n                                    {\n                                    <React.Fragment>\n                                        <img className={`poster-img ${imgClass}`} src={props.imgURL} alt=\"\"/>\n                                            <motion.video ref={trailerRef} > \n                                                <source src={props.trailerURL} />\n                                            </motion.video>\n                                    </React.Fragment>\n                                    }\n                                </motion.div>\n                                <motion.div\n                                    initial=\"initialControls\"\n                                    animate=\"animateControls\"\n                                    exit=\"exitControls\"\n                                    variants={controlsVariants}>\n                                    <MoviePreviewControls genre={props.genre} name={props.name} />\n                                </motion.div>\n                            </motion.div>\n                        }\n                    </AnimatePresence>\n            </motion.div>\n        </React.Fragment>\n    )\n} \n","import { videoService } from '../../services/videoService'\n\nexport function loadCategories() {\n  return async dispatch => {\n    try {\n      const categories = await videoService.query();\n      dispatch({ type: 'SET_CATEGORIES', categories });\n      loadMovies()\n    } catch (err) {\n      console.log('error loading categories', err);\n      throw err\n    }\n  }\n}\n\nexport function loadMovies() {\n  return async dispatch => {\n    try {\n      const movies = await videoService.moviePreviews();\n      dispatch({ type: 'SET_MOVIES', movies });\n    } catch (err) {\n      console.log('error loading movies', err);\n      throw err;\n    }\n  }\n}\n\nexport function loadMovie(id){\n  return async dispatch => {\n    try{\n      const currentMovie = await videoService.getMovieById(id)\n      dispatch({ type: 'SET_MOVIE', currentMovie })\n    } catch (err) {\n      console.log(err)\n      throw err\n    }\n  }\n}\n\nexport function resetMovie(){\n  return async dispatch => {\n    try {\n      dispatch({ type: 'RESET_MOVIE' })\n    } catch(err){\n      console.log(err)\n      throw err\n    }\n  }\n}\n\n// export function disableJumbotronVideo() {\n//   return dispatch => {\n//     dispatch({ type: 'DISABLE_JUMBOTRON_VIDEO' })\n//   }\n// }\n// export function enableJumbotronVideo() {\n//   return dispatch => {\n//     dispatch({ type: 'ENABLE_JUMBOTRON_VIDEO' })\n//   }\n// }","import React, { useEffect, useState, useRef } from 'react'\nimport { videoService } from '../services/videoService'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadMovies } from '../store/actions/videoActions'\nimport { MoviePreview } from './MoviePreview'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\n\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// Import Swiper styles\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport { Checkbox } from '@material-ui/core'\n\n// install Swiper components\nSwiperCore.use([Navigation, Pagination]);\n\nexport function MovieList(props) {\n\n    const { movies } = useSelector(state => state.videoReducer)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        loadMovies()\n    }, [])\n\n    const [listClassNames, setListClassNames] = useState('movies-container')\n\n    async function loadMovies(){\n        try{\n            const movies = await videoService.getMoviePreviews()\n            dispatch({ type: 'SET_MOVIES', movies })\n        }catch(err){\n            console.log(err, 'error fetching movies')\n        }\n    }\n\n    const swiperConfig = {\n        spaceBetween: 3,\n        slidesPerView: 6,\n        slidesPerGroup: 6,\n        speed: 650,\n        navigation: true,\n        loop:true,\n    }\n\n    return (\n        <section className=\"list-container\" >\n            <h2>{ props.name }</h2>\n            <motion.div className={ listClassNames }\n                onHoverStart={() => setListClassNames('movies-container hovering') }\n                onHoverEnd={() => setListClassNames('movies-container') }\n                >\n                {movies.length &&\n                    <Swiper {...swiperConfig}\n                        onSwiper={(swiper) => {\n                            if (props.idx === 1) swiper.slideToLoop(7, 0, false)\n                            if (props.idx === 2) swiper.slideToLoop(13, 0, false)\n                        }}\n                    >\n                        {movies.map((movie, idx) => {\n                            return (\n                                <SwiperSlide key={movie._id}>\n                                    <MoviePreview\n                                        key={movie._id}\n                                        id={movie._id}\n                                        name={movie.name}\n                                        imgURL={movie.imgURL}\n                                        genre={movie.genre}  \n                                        trailerURL={movie.trailerURL}\n                                    />\n                                </SwiperSlide>\n                            )\n                        })}  \n                    </Swiper>\n                }\n            </motion.div>      \n        </section>\n    )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <section className=\"footer-container\">\n            <div className=\"footer-divider\"></div>\n            <div className=\"inner-footer-contianer\">\n                <h4>This demo site was developed with ❤️ by Daniel Dante</h4>\n                <p>Using React, Redux, Sass, Node, Express, Framer-Motion, Swiper js, Google OAuth, Formik</p>\n                <div className=\"footer-links-container\">\n                    <div>\n                        <a target=\"blank\" href=\"https://www.linkedin.com/in/daniel-dante-61889b184/\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747720/white-linkedin-icon-transparent-background-28_n5l9wn.png\" alt=\"\" /><p>Linkedin</p> </a>\n                    </div> \n                    <div>\n                        <a target=\"blank\" href=\"https://github.com/xXDaniel123\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747481/github-icon-white-6_lajeqf.png\" alt=\"\" /><p>Github</p></a>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Jumbotron } from '../cmps/Jumbotron'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { resetMovie } from '../store/actions/videoActions'\nimport { videoService } from '../services/videoService'\nimport { MovieList } from '../cmps/MovieList'\nimport { Route, useHistory } from 'react-router-dom'\nimport { Footer } from '../cmps/Footer'\nimport { motion } from 'framer-motion'\n\nexport function NetflixApp() {\n\n    const { categories, currentMovie } = useSelector(state => state.videoReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n    async function loadCategories(){\n        try{\n            const currCategories = await videoService.query()\n            dispatch({ type: 'SET_CATEGORIES', categories:  currCategories })\n        }catch(err){\n            console.log(err, 'error fetching categories')\n        }\n    }\n\n    const closeMovieModal = () => {\n        dispatch(resetMovie())\n        history.push('/browse')\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n        },\n        exit: {\n            opacity: 0,\n        },\n        initial: {\n            opacity: 0,\n        }\n    }\n\n    const pageTransition = {\n        duration: 1.25,\n        ease: 'easeOut'\n\n    }\n\n    return (\n        <motion.div className=\"app-container\"\n            exit=\"exit\"\n            animate=\"animate\"\n            initial=\"initial\"\n            variants={variants}\n            transition={pageTransition}\n            \n        >\n            {categories.length \n                ? <React.Fragment>\n                    {currentMovie && <div className=\"screen\" onClick={ () => closeMovieModal() }></div>}\n                    <Jumbotron />\n                    <motion.section className=\"categories\"\n                        exit=\"exit\"\n                        animate=\"animate\"\n                        initial=\"initial\"\n                        transition={pageTransition}\n                    >\n                        {categories.map((category, idx) => {\n                            return (\n                                <MovieList idx={idx} key={category.id} name={category.name} />\n                            )\n                        })}\n                    </motion.section>\n                    <Footer />\n                </React.Fragment>\n                : <h4>loading...</h4> \n            }\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\nexport const AboutPage = () => {\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 200\n        },\n        exit: {\n            opacity: 0,\n            y: 230\n        },\n        initial: {\n            opacity: 0,\n            y: 230\n        }\n    }\n\n    const pageTransition={\n        duration: 0.35,\n        ease: 'easeOut'\n    }\n\n    return (\n        <motion.div\n            exit=\"exit\"\n            animate=\"animate\"\n            initial=\"initial\"\n            variants={variants}\n            transition={pageTransition}\n        >\n            <div className=\"inner-footer-contianer about-container\">\n                <h4>This demo site was developed with ❤️ by Daniel Dante</h4>\n                <p>Using React, Redux, Sass, Node, Express, Framer-Motion, Swiper js, Google OAuth, MongoDB, Formik</p>\n                <div className=\"footer-links-container\">\n                    <div>\n                        <a target=\"blank\" href=\"https://www.linkedin.com/in/daniel-dante-61889b184/\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747720/white-linkedin-icon-transparent-background-28_n5l9wn.png\" alt=\"\" /><p>Linkedin</p> </a>\n                    </div>\n                    <div>\n                        <a target=\"blank\" href=\"https://github.com/xXDaniel123\"><img style={{ width: '25%', marginRight: '1rem' }} src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1606747481/github-icon-white-6_lajeqf.png\" alt=\"\" /><p>Github</p></a>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { onUserSignup, onUserLogin, onGoogleSignup } from '../store/actions/userActions';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { motion } from 'framer-motion';\n\n\nconst clientId = '168447752977-topi06sp3n60pk37e8j5dg91lnjophvi.apps.googleusercontent.com'\n\nexport const LoginPage = () => {\n    \n    const [isErrorShown, setIsErrorShown] = useState(false)\n    const [toggleMode, setToggleMode] = useState('signup')\n    const [userDetails, setUserDetails] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    })\n\n    // toggle between login and sign up mode\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleChange = ({ target }) => {\n        setIsErrorShown(false)\n        const currValue = target.value.replace(/\\s(?=\\s)/g, '')\n        setUserDetails(prevDetails => ({ ...prevDetails, [target.name]: currValue }))\n    }\n\n    const onSignup = async (ev) => {\n        ev.preventDefault()\n        const newUser = {\n            email: userDetails.email.trim(),\n            fullName: userDetails.firstName.trim() + ' ' + userDetails.lastName.trim(),\n            password: userDetails.password\n        }\n        if (!newUser.email || !userDetails.firstName.trim() || !userDetails.lastName.trim() || !newUser.password) {\n            setIsErrorShown(true)\n            return\n        }\n\n        try {\n            await dispatch(onUserSignup(newUser))\n            history.replace('/browse')\n        } catch (err) {\n            setIsErrorShown(true)\n        }\n    }\n\n    const onLogin = async (ev) => {\n        ev.preventDefault()\n        setIsErrorShown(false)\n        const userToLogin = {\n            email: userDetails.email.trim(),\n            password: userDetails.password.trim()\n        }\n        // need to show error message\n        if (!userToLogin.email || !userToLogin.password) {\n            setIsErrorShown(true)\n            return\n        }\n\n        try {\n            await dispatch(onUserLogin(userToLogin))\n            history.replace('/browse')\n        } catch (err) {\n            setIsErrorShown(true)\n        }\n    }\n\n    const onSuccess = async (res) => {\n        try{\n            await dispatch(onGoogleSignup(res))\n            history.replace('/browse')\n        } catch(err) {\n            setIsErrorShown(true)\n            console.log('error on front end')\n        }\n    }\n\n    const onFailure = (res) => {\n        setIsErrorShown(true)\n    }\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        exit: {\n            opacity: 0,\n            y: 24\n        },\n        initial: {\n            opacity: 0,\n            y: 24\n        }\n    }\n\n    return (\n        <div className=\"login-container\">\n            <Link to='/'><img src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" alt=\"logo\" className=\"logo\" /></Link>\n            <div className=\"background-container\">\n                <div className=\"black-screen\"></div>\n                <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1605007211/hero_image_lnjtd8.jpg\" alt=\"\" />\n            </div>\n            <motion.div className=\"form-outer-container\"\n                exit=\"exit\"\n                animate=\"animate\"\n                initial=\"initial\"\n                variants={variants}\n                transition={{ duration: 0.4 }}\n            >\n                <div className=\"form-container\">\n                { toggleMode === 'signup' && \n                <React.Fragment>\n                    <h1>Sign Up</h1>\n                        <Formik\n                            validate={values => {\n                                const errors = {};\n                                if (!values.email) { errors.email = 'Required'; }\n                                else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) { errors.email = 'Invalid email address'; } return errors;\n                            }} onSubmit={ onSignup }>\n                            {({ isSubmitting, }) => (\n                                <form className=\"inner-form-container\" onSubmit={ onSignup }>\n                                    <input className=\"field\" type=\"text\" name=\"firstName\" onChange={handleChange} placeholder=\"First Name\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"text\" name=\"lastName\" onChange={ handleChange } placeholder=\"Last Name\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"email\" name=\"email\" onChange={ handleChange } placeholder=\"Email address\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"password\" name=\"password\" onChange={ handleChange } placeholder=\"Password\" autoComplete=\"off\" />\n                                    <button type=\"submit\" disabled={ isSubmitting }>Sign Up</button>\n                                </form>\n                            )}\n                        </Formik>\n                    </React.Fragment>\n                }\n                { toggleMode === 'login' && \n                    <React.Fragment>\n                    <h1>Log In</h1>\n                        <Formik\n                            validate={values => {\n                                const errors = {};\n                                if (!values.email) { errors.email = 'Required'; }\n                                else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) { errors.email = 'Invalid email address'; } return errors;\n                            }} onSubmit={ onLogin }>\n                            {({ isSubmitting, }) => (\n                                <form className=\"inner-form-container\" onSubmit={ onLogin }>\n                                    <input className=\"field\" type=\"email\" name=\"email\" onChange={ handleChange } placeholder=\"Email address\" autoComplete=\"off\" />\n                                    <input className=\"field\" type=\"password\" name=\"password\" onChange={ handleChange } placeholder=\"Password\" autoComplete=\"off\" />\n                                    <button type=\"submit\" disabled={ isSubmitting }>Log in</button>\n                                </form>\n                            )}\n                        </Formik>\n                    </React.Fragment>\n                }\n                    <div><br/><h4>or</h4><br/></div>\n                    <div className=\"google-login-btn\">\n                        <GoogleLogin \n                            clientId={clientId}\n                            buttonText={toggleMode === 'signup' ? \"Sign up with Google\" : \"Log in with google\"}\n                            onSuccess={onSuccess}\n                            onFailure={onFailure}\n                            cookiePolicy={'single_host_origin'}\n                            isSignedIn={false} // check this after to true to keep logged in?\n                        />\n                    </div>\n                    { isErrorShown && <div className=\"error-container\">\n                            Something went wrong... <br/>\n                            Check the details and try again?\n                        </div>\n                    }\n                    <div className=\"toggle-signup-mode\">\n                    { (toggleMode === 'signup') ? \n                            <div>Already user?<br/><button onClick={() => setToggleMode('login')}>Login</button></div>\n                            : <div><button onClick={() => setToggleMode('signup')}>Sign up</button></div>\n                    }\n                    </div>\n                </div>\n            </motion.div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\n\nexport const WelcomePage = () => {\n\n\n    const variants = {\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        exit: {\n            opacity: 0,\n            y: 100\n        },\n        initial: {\n            opacity: 0,\n            y: 100\n        }\n    }\n\n    return (\n        <div className=\"welcome-page-container\">\n            <div className=\"background-container\">\n                <div className=\"black-screen\"></div>\n                <img src=\"https://res.cloudinary.com/da0i9wy5t/image/upload/v1605007211/hero_image_lnjtd8.jpg\" alt=\"\" />\n            </div>\n            <div className=\"black-gradient\"></div>\n            <motion.div className=\"directions-container\"\n                exit=\"exit\"\n                animate=\"animate\"\n                initial=\"initial\"\n                variants={variants}\n                transition={{ duration: 0.4, ease: 'easeOut'}}\n            >\n                <motion.img exit=\"exit\"\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.15 }} src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" alt=\"logo\"/>\n                <motion.h2\n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.35 }}\n                >Welcome to my Netflix Clone</motion.h2>\n                <motion.div \n                    animate=\"animate\"\n                    initial=\"initial\"\n                    variants={variants}\n                    transition={{ duration: 0.4, ease: 'easeOut', delay: 0.425 }}\n                    className=\"directions-buttons-container\">\n                    <Link to='browse'><div>Enter as Guest</div></Link>\n                    <Link to='login'><div>login & Signup</div></Link>\n                </motion.div>\n            </motion.div>\n        </div>\n    )\n}","import React, { useEffect, useState }  from 'react';\nimport { NetflixApp } from './pages/NetflixApp'\nimport './assets/styles/global.scss'\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { MovieDetails } from './cmps/MovieDetails';\nimport { AboutPage } from './pages/AboutPage';\nimport { Navbar } from './cmps/Navbar';\nimport { LoginPage } from './pages/LoginPage';\nimport { useSelector } from 'react-redux';\nimport { WelcomePage } from './pages/WelcomePage';\nimport { AnimatePresence } from 'framer-motion';\n\nfunction App() {\n\n  const location = useLocation()\n  const currentMovie = useSelector(state => state.videoReducer.currentMovie)\n\n  useEffect(() => {\n    currentMovie ? document.querySelector('html').classList.add('disable-scroll') : document.querySelector('html').classList.remove('disable-scroll') \n  }, [currentMovie])\n\n  return (\n    <React.Fragment>\n      {/* {(location.pathname !== '/login' && location.pathname !== '/') && <Navbar />} */}\n      <Navbar />\n      <AnimatePresence>\n        <Switch>\n          <Route path=\"/about\" component={AboutPage } />\n          <Route path=\"/browse\" component={ NetflixApp } />\n          <Route path=\"/login\" component={ LoginPage } />\n          <Route path=\"/\" component={ WelcomePage } />\n        </Switch>\n      </AnimatePresence>\n        <Route path=\"/browse/:id\" component={ MovieDetails } />\n    </React.Fragment>\n  )\n}\n\nexport default App;","const initialState = {\n    categories: [],\n    movies: [],\n    currentMovie: null,\n    isJumboTronCanPlay: true\n}\n\nexport function videoReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_CATEGORIES':\n            return {\n                ...state,\n                categories: action.categories\n            }\n\n        case 'SET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies\n            }\n\n        case 'SET_MOVIE':\n            return {\n                ...state,\n                currentMovie: action.currentMovie\n            }\n\n        case 'RESET_MOVIE':\n            return {\n                ...state,\n                currentMovie: null\n            }\n\n            // fix this one with extra for true \n        case 'TOGGLE_JUMBOTRON_VIDEO':\n            return {\n                ...state,\n                isJumboTronCanPlay: action.isJumboTronCanPlay\n            }\n\n            default:\n                return state\n    }\n}","// let getLoggedinUser = (sessionStorage.USER) ? JSON.stringify(sessionStorage.USER) : null\n\nconst initialState = {\n    loggedInUser: (sessionStorage.USER) ? JSON.parse(sessionStorage.USER) : null,\n}\n\nexport function userReducer(state = initialState, action) {\n\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                loggedInUser: action.loggedInUser\n            }\n\n            default:\n                return state\n    }\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { videoReducer } from './reducers/videoReducer.js';\nimport { userReducer } from './reducers/userReducer.js';\n\nconst rootReducer = combineReducers({\n    videoReducer,\n    userReducer\n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <Router> \n        <App />\n      </Router>\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}